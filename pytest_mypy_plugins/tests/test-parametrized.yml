- case: only_main
  parametrized:
    - a: 1
      revealed_type: builtins.int
    - a: 1.0
      revealed_type: builtins.float
  main: |
    a = {{ a }}
    reveal_type(a)  # N: Revealed type is "{{ revealed_type }}"


- case: with_extra
  parametrized:
    - a: 2
      b: null
      rt: Any
    - a: 3
      b: 3
      rt: Any
  main: |
    import foo
    reveal_type(foo.test({{ a }}, {{ b }}))  # N: Revealed type is "{{ rt }}"
  files:
    - path: foo.py
      content: |
        from typing import Any

        def test(a: Any, b: Any) -> Any:
          ...


- case: with_out
  parametrized:
    - what: cat
      rt: builtins.str
    - what: dog
      rt: builtins.str
  main: |
    animal = '{{ what }}'
    reveal_type(animal)
    try:
      animal / 2
    except Exception:
      ...
  out: |
    main:2: note: Revealed type is "{{ rt }}"
    main:4: error: Unsupported operand types for / ("str" and "int")
  mypy_config: |
    hide_error_codes = True
